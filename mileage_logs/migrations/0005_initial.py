# Generated by Django 5.1.9 on 2025-06-14 21:45

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("members", "0007_alter_member_options_alter_memberalias_options_and_more"),
        ("mileage_logs", "0004_remove_mileagelogentry_mileage_log_and_more"),
        ("vehicles", "0003_alter_vehicle_current_mileage_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="MonthlyMileageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        help_text="Year of the mileage log (e.g., 2023)",
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2100),
                        ],
                    ),
                ),
                (
                    "month",
                    models.IntegerField(
                        choices=[
                            (1, "January"),
                            (2, "February"),
                            (3, "March"),
                            (4, "April"),
                            (5, "May"),
                            (6, "June"),
                            (7, "July"),
                            (8, "August"),
                            (9, "September"),
                            (10, "October"),
                            (11, "November"),
                            (12, "December"),
                        ],
                        help_text="Month of the mileage log (1 for January, 12 for December)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                (
                    "start_odometer_reading",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Odometer reading at the start of the month (for checksum)",
                        max_digits=10,
                    ),
                ),
                (
                    "end_odometer_reading",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Odometer reading at the end of the month (for checksum)",
                        max_digits=10,
                    ),
                ),
                (
                    "total_distance_logged",
                    models.DecimalField(
                        decimal_places=1,
                        default=0.0,
                        help_text="Sum of distances from all associated MileageLogEntries (for checksum)",
                        max_digits=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "vehicle",
                    models.ForeignKey(
                        help_text="The vehicle this monthly log belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monthly_logs",
                        to="vehicles.vehicle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Monthly Mileage Log",
                "verbose_name_plural": "Monthly Mileage Logs",
                "ordering": ["-year", "-month"],
                "unique_together": {("vehicle", "year", "month")},
            },
        ),
        migrations.CreateModel(
            name="MileageLogEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entry_date",
                    models.DateField(
                        help_text="Date of the mileage entry (should be within the monthly log's month/year)"
                    ),
                ),
                (
                    "start_mileage",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Odometer reading at the start of the trip",
                        max_digits=10,
                    ),
                ),
                (
                    "end_mileage",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Odometer reading at the end of the trip",
                        max_digits=10,
                    ),
                ),
                (
                    "distance_traveled",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        editable=False,
                        help_text="Calculated distance (end_mileage - start_mileage)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "destination",
                    models.TextField(
                        blank=True, help_text="Optional destination of the trip"
                    ),
                ),
                (
                    "purpose",
                    models.TextField(
                        blank=True, help_text="Optional purpose of the trip"
                    ),
                ),
                ("is_long_distance", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "members",
                    models.ManyToManyField(
                        help_text="Select members associated with this trip. At least one member is required.",
                        related_name="mileage_entries",
                        to="members.member",
                    ),
                ),
                (
                    "monthly_log",
                    models.ForeignKey(
                        help_text="The monthly log this entry belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="log_entries",
                        to="mileage_logs.monthlymileagelog",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mileage Log Entry",
                "verbose_name_plural": "Mileage Log Entries",
                "ordering": [
                    "monthly_log__vehicle",
                    "monthly_log__year",
                    "monthly_log__month",
                    "entry_date",
                    "start_mileage",
                ],
                "unique_together": {("monthly_log", "entry_date", "start_mileage")},
            },
        ),
    ]
