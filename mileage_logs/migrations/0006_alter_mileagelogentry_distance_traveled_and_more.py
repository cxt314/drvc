# Generated by Django 5.1.9 on 2025-07-22 16:05

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("members", "0007_alter_member_options_alter_memberalias_options_and_more"),
        ("mileage_logs", "0005_initial"),
    ]

    operations = [
        migrations.AlterField(
            model_name="mileagelogentry",
            name="distance_traveled",
            field=models.DecimalField(
                blank=True,
                decimal_places=0,
                editable=False,
                help_text="Calculated distance (end_mileage - start_mileage)",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="mileagelogentry",
            name="end_mileage",
            field=models.DecimalField(
                decimal_places=0,
                help_text="Odometer reading at the end of the trip",
                max_digits=10,
            ),
        ),
        migrations.AlterField(
            model_name="mileagelogentry",
            name="entry_date",
            field=models.DateField(
                help_text="Date of the trip (should be within the monthly log's month/year)"
            ),
        ),
        migrations.AlterField(
            model_name="mileagelogentry",
            name="monthly_log",
            field=models.ForeignKey(
                help_text="The monthly log this trip belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="log_entries",
                to="mileage_logs.monthlymileagelog",
            ),
        ),
        migrations.AlterField(
            model_name="mileagelogentry",
            name="start_mileage",
            field=models.DecimalField(
                decimal_places=0,
                help_text="Odometer reading at the start of the trip",
                max_digits=10,
            ),
        ),
        migrations.CreateModel(
            name="MileageClaim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number_of_seats_claimed",
                    models.PositiveIntegerField(
                        help_text="Number of seats claimed by this member for this trip.",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "member",
                    models.ForeignKey(
                        help_text="The member making the claim",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="members.member",
                    ),
                ),
                (
                    "mileage_log_entry",
                    models.ForeignKey(
                        help_text="The mileage log entry this claim is for",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mileage_logs.mileagelogentry",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mileage Claim",
                "verbose_name_plural": "Mileage Claims",
                "ordering": ["mileage_log_entry", "member__name"],
                "unique_together": {("mileage_log_entry", "member")},
            },
        ),
        migrations.RemoveField(
            model_name="mileagelogentry",
            name="members"
        ),
        migrations.AddField(
            model_name="mileagelogentry",
            name="members",
            field=models.ManyToManyField(
                help_text="Members associated with this trip and their seat claims.",
                related_name="claimed_mileage_entries",
                through="mileage_logs.MileageClaim",
                to="members.member",
            ),
        ),
    ]
